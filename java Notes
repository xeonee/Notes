Unmodifiable Vs Immutable Collections:

# Unmodifiable collections are usually read-only views (wrappers) of other collections. 
  You can't add, remove or clear them, but the underlying collection can change.
# Immutable collections can't be changed at all - they don't wrap another collection - they have their own elements, 
  like guava's ImmutableList.

# Example:
    List<String> strings = new ArrayList<String>();
    List<String> unmodifiable = Collections.unmodifiableList(strings);
    unmodifiable.add("New string"); // will fail at runtime
    strings.add("Aha!"); // will succeed
    System.out.println(unmodifiable);
